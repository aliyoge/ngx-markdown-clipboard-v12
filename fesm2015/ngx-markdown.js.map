{"version":3,"file":"ngx-markdown.js","sources":["../../../lib/src/clipboard-button.component.ts","../../../lib/src/clipboard-options.ts","../../../lib/src/katex-options.ts","../../../lib/src/language.pipe.ts","../../../lib/src/prism-plugin.ts","../../../lib/src/marked-options.ts","../../../lib/src/markdown.service.ts","../../../lib/src/markdown.component.ts","../../../lib/src/markdown.pipe.ts","../../../lib/src/markdown.module.ts","../../../lib/ngx-markdown.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { merge, of, Subject, timer } from 'rxjs';\nimport { switchMap, mapTo, distinctUntilChanged, shareReplay, startWith, map } from 'rxjs/operators';\n\nconst BUTTON_TEXT_COPY = 'Copy';\nconst BUTTON_TEXT_COPIED = 'Copied';\n\n@Component({\n  selector: 'markdown-clipboard',\n  template: `\n    <button\n      class=\"markdown-clipboard-button\"\n      [class.copied]=\"copied$ | async\"\n      (click)=\"onCopyToClipboardClick()\"\n    >{{ copiedText$ | async }}</button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClipboardButtonComponent {\n\n  private _buttonClick$ = new Subject<void>();\n\n  readonly copied$ = this._buttonClick$.pipe(\n    switchMap(() => merge(\n      of(true),\n      timer(3000).pipe(mapTo(false)),\n    )),\n    distinctUntilChanged(),\n    shareReplay(1),\n  );\n\n  readonly copiedText$ = this.copied$.pipe(\n    startWith(false),\n    map(copied => copied\n      ? BUTTON_TEXT_COPIED\n      : BUTTON_TEXT_COPY),\n  );\n\n  onCopyToClipboardClick(): void {\n    this._buttonClick$.next();\n  }\n}\n","import { TemplateRef, Type } from '@angular/core';\n\nexport class ClipboardOptions {\n  buttonComponent?: Type<unknown>;\n}\n\nexport class ClipboardRenderOptions extends ClipboardOptions {\n  buttonTemplate?: TemplateRef<unknown>;\n}\n","/* eslint-disable */\nexport class KatexSpecificOptions {\n  /**\n   * If `true`, math will be rendered in display mode\n   * (math in display style and center math on page)\n   *\n   * If `false`, math will be rendered in inline mode\n   * @default false\n   */\n  displayMode?: boolean;\n  /**\n   * If `true`, KaTeX will throw a `ParseError` when\n   * it encounters an unsupported command or invalid LaTex\n   *\n   * If `false`, KaTeX will render unsupported commands as\n   * text, and render invalid LaTeX as its source code with\n   * hover text giving the error, in color given by errorColor\n   * @default true\n   */\n  throwOnError?: boolean;\n  /**\n   * A Color string given in format `#XXX` or `#XXXXXX`\n   */\n  errorColor?: string;\n  /**\n   * A collection of custom macros.\n   *\n   * See `src/macros.js` for its usage\n   */\n  macros?: any;\n  /**\n   * If `true`, `\\color` will work like LaTeX's `\\textcolor`\n   * and takes 2 arguments\n   *\n   * If `false`, `\\color` will work like LaTeX's `\\color`\n   * and takes 1 argument\n   *\n   * In both cases, `\\textcolor` works as in LaTeX\n   *\n   * @default false\n   */\n  colorIsTextColor?: boolean;\n  /**\n   * All user-specified sizes will be caped to `maxSize` ems\n   *\n   * If set to Infinity, users can make elements and space\n   * arbitrarily large\n   *\n   * @default Infinity\n   */\n  maxSize?: number;\n  /**\n   * Limit the number of macro expansions to specified number\n   *\n   * If set to `Infinity`, marco expander will try to fully expand\n   * as in LaTex\n   *\n   * @default 1000\n   */\n  maxExpand?: number;\n  /**\n   * Allowed protocols in `\\href`\n   *\n   * Use `_relative` to allow relative urls\n   *\n   * Use `*` to allow all protocols\n   */\n  allowedProtocols?: string[];\n  /**\n   * If `false` or `\"ignore\"`, allow features that make\n   * writing in LaTex convenient but not supported by LaTex\n   *\n   * If `true` or `\"error\"`, throw an error for such transgressions\n   *\n   * If `\"warn\"`, warn about behavior via `console.warn`\n   *\n   * @default \"warn\"\n   */\n  strict?: boolean | string | Function;\n}\n\nexport interface RenderMathInElementSpecificOptionsDelimiters {\n  /**\n   * A string which starts the math expression (i.e. the left delimiter)\n   */\n  left: string;\n  /**\n   * A string which ends the math expression (i.e. the right delimiter)\n   */\n  right: string;\n  /**\n   * A boolean of whether the math in the expression should be rendered in display mode or not\n   */\n  display: boolean\n}\n\nexport interface RenderMathInElementSpecificOptions {\n  /**\n   * A list of delimiters to look for math\n   *\n   * @default [\n   *   {left: \"$$\", right: \"$$\", display: true},\n   *   {left: \"\\\\(\", right: \"\\\\)\", display: false},\n   *   {left: \"\\\\[\", right: \"\\\\]\", display: true}\n   * ]\n   */\n  delimiters?: ReadonlyArray<RenderMathInElementSpecificOptionsDelimiters> | undefined;\n  /**\n   * A list of DOM node types to ignore when recursing through\n   *\n   * @default [\"script\", \"noscript\", \"style\", \"textarea\", \"pre\", \"code\"]\n   */\n  ignoredTags?: ReadonlyArray<keyof HTMLElementTagNameMap> | undefined;\n  /**\n   * A list of DOM node class names to ignore when recursing through\n   *\n   * @default []\n   */\n  ignoredClasses?: string[] | undefined;\n\n  /**\n   * A callback method returning a message and an error stack in case of an critical error during rendering\n   * @param msg Message generated by KaTeX\n   * @param err Caught error\n   *\n   * @default console.error\n   */\n  errorCallback?(msg: string, err: Error): void;\n}\n\n/**\n* renderMathInElement options contain KaTeX render options and renderMathInElement specific options\n*/\nexport type KatexOptions = KatexSpecificOptions & RenderMathInElementSpecificOptions;\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'language',\n})\nexport class LanguagePipe implements PipeTransform {\n\n  transform(value: string, language: string): string {\n    if (value == null) {\n      value = '';\n    }\n    if (language == null) {\n      language = '';\n    }\n    if (typeof value !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid value type [${typeof value}]`);\n      return value;\n    }\n    if (typeof language !== 'string') {\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${typeof language}]`);\n      return value;\n    }\n    return '```' + language + '\\n' +  value + '\\n```';\n  }\n}\n","export enum PrismPlugin {\n  LineHighlight = 'line-highlight',\n  LineNumbers = 'line-numbers',\n}\n","/* eslint-disable */\nimport { MarkedRenderer } from './marked-renderer';\n\nexport class MarkedOptions {\n  /**\n   * A prefix URL for any relative link.\n   */\n  baseUrl?: string;\n\n  /**\n   * Enable GFM line breaks. This option requires the gfm option to be true.\n   */\n  breaks?: boolean;\n\n  /**\n   * Enable GitHub flavored markdown.\n   */\n  gfm?: boolean;\n\n  /**\n   * Include an id attribute when emitting headings.\n   */\n  headerIds?: boolean;\n\n  /**\n   * Set the prefix for header tag ids.\n   */\n  headerPrefix?: string;\n\n  /**\n   * Set the prefix for code block classes.\n   */\n  langPrefix?: string;\n\n  /**\n   * Mangle autolinks (<email@domain.com>).\n   */\n  mangle?: boolean;\n\n  /**\n   * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.\n   */\n  pedantic?: boolean;\n\n  /**\n   * Type: object Default: new Renderer()\n   *\n   * An object containing functions to render tokens to HTML.\n   */\n  renderer?: MarkedRenderer;\n\n  /**\n   * Shows an HTML error message when rendering fails.\n   */\n  silent?: boolean;\n\n  /**\n   * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.\n   */\n  smartLists?: boolean;\n\n  /**\n   * Use \"smart\" typograhic punctuation for things like quotes and dashes.\n   */\n  smartypants?: boolean;\n\n  /**\n   * Generate closing slash for self-closing tags (<br/> instead of <br>)\n   */\n  xhtml?: boolean;\n\n  /**\n   * A function to highlight code blocks. The function takes three arguments: code, lang, and callback.\n   */\n  highlight?(code: string, lang: string, callback?: (error: any | undefined, code: string) => void): string;\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { ComponentFactoryResolver, EmbeddedViewRef, Inject, Injectable, InjectionToken, Optional, PLATFORM_ID, SecurityContext, ViewContainerRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { marked, Renderer } from 'marked';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ClipboardButtonComponent } from './clipboard-button.component';\nimport { ClipboardOptions, ClipboardRenderOptions } from './clipboard-options';\nimport { KatexOptions } from './katex-options';\nimport { MarkedOptions } from './marked-options';\nimport { MarkedRenderer } from './marked-renderer';\n\n// clipboard\ndeclare let ClipboardJS: {\n  new (\n    selector: string | Element | NodeListOf<Element>,\n    options?: { text?: (elem: Element) => string; },\n  ): typeof ClipboardJS;\n  destroy(): void;\n};\n\n// emoji\ndeclare let joypixels: {\n  shortnameToUnicode(input: string): string;\n};\n\ndeclare let katex: unknown;\ndeclare function renderMathInElement(elem: HTMLElement, options?: KatexOptions): void;\n\ndeclare let Prism: {\n  highlightAllUnder: (element: Element | Document) => void;\n};\n\n/* eslint-disable max-len */\nexport const errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\nexport const errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\nexport const errorMermaidNotLoaded = '[ngx-markdown] When using the `mermaid` attribute you *have to* include Mermaid files to `angular.json` or use imports. See README for more information';\nexport const errorClipboardNotLoaded = '[ngx-markdown] When using the `clipboard` attribute you *have to* include Clipboard files to `angular.json` or use imports. See README for more information';\nexport const errorClipboardViewContainerRequired = '[ngx-markdown] When using the `clipboard` attribute you *have to* provide the `viewContainerRef` parameter to `MarkdownService.render()` function';\nexport const errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\n/* eslint-enable max-len */\n\nexport const SECURITY_CONTEXT = new InjectionToken<SecurityContext>('SECURITY_CONTEXT');\n\nexport interface ParseOptions {\n  decodeHtml?: boolean;\n  inline?: boolean;\n  emoji?: boolean;\n  mermaid?: boolean;\n  markedOptions?: MarkedOptions;\n}\n\nexport interface RenderOptions {\n  clipboard?: boolean;\n  clipboardOptions?: ClipboardRenderOptions;\n  katex?: boolean;\n  katexOptions?: KatexOptions;\n  mermaid?: boolean;\n  // mermaidOptions?: MermaidAPI.Config;\n}\n\nexport class ExtendedRenderer extends Renderer {\n  ɵNgxMarkdownRendererExtended = false;\n}\n\n@Injectable()\nexport class MarkdownService {\n\n  private readonly DEFAULT_PARSE_OPTIONS: ParseOptions = {\n    decodeHtml: false,\n    inline: false,\n    emoji: false,\n    mermaid: false,\n    markedOptions: undefined,\n  };\n\n  private readonly DEFAULT_RENDER_OPTIONS: RenderOptions = {\n    clipboard: false,\n    clipboardOptions: undefined,\n    katex: false,\n    katexOptions: undefined,\n  };\n\n  private readonly DEFAULT_MARKED_OPTIONS: MarkedOptions = {\n    renderer: new MarkedRenderer(),\n  };\n\n  private readonly DEFAULT_KATEX_OPTIONS: KatexOptions = {\n    delimiters: [\n      { left: \"$$\", right: \"$$\", display: true },\n      { left: \"$\", right: \"$\", display: false },\n      { left: \"\\\\(\", right: \"\\\\)\", display: false },\n      { left: \"\\\\begin{equation}\", right: \"\\\\end{equation}\", display: true },\n      { left: \"\\\\begin{align}\", right: \"\\\\end{align}\", display: true },\n      { left: \"\\\\begin{alignat}\", right: \"\\\\end{alignat}\", display: true },\n      { left: \"\\\\begin{gather}\", right: \"\\\\end{gather}\", display: true },\n      { left: \"\\\\begin{CD}\", right: \"\\\\end{CD}\", display: true },\n      { left: \"\\\\[\", right: \"\\\\]\", display: true },\n    ],\n  };\n\n  private readonly DEFAULT_CLIPBOARD_OPTIONS: ClipboardOptions = {\n    buttonComponent: undefined,\n  };\n\n  private _options: MarkedOptions | undefined;\n\n  get options(): MarkedOptions | undefined { return this._options!; }\n  set options(value: MarkedOptions | undefined) {\n    this._options = { ...this.DEFAULT_MARKED_OPTIONS, ...value };\n  }\n\n  get renderer(): MarkedRenderer { return this.options!.renderer!; }\n  set renderer(value: MarkedRenderer) {\n    this.options!.renderer = value;\n  }\n\n  private readonly _reload$ = new Subject<void>();\n  readonly reload$ = this._reload$.asObservable();\n\n  constructor(\n    @Inject(PLATFORM_ID) private platform: Object,\n    @Inject(SECURITY_CONTEXT) private securityContext: SecurityContext,\n    @Optional() private http: HttpClient,\n    @Optional() private clipboardOptions: ClipboardOptions,\n    @Optional() options: MarkedOptions,\n    private sanitizer: DomSanitizer,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    this.options = options;\n  }\n\n  parse(markdown: string, options: ParseOptions = this.DEFAULT_PARSE_OPTIONS): string {\n    const {\n      decodeHtml,\n      inline,\n      emoji,\n      mermaid,\n      markedOptions = this.options!,\n    } = options;\n\n    if (mermaid) {\n      this.renderer = this.extendRenderer(markedOptions.renderer || new Renderer());\n    }\n\n    const trimmed = this.trimIndentation(markdown);\n    const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\n    const emojified = emoji ? this.parseEmoji(decoded) : decoded;\n    const marked = this.parseMarked(emojified, markedOptions, inline);\n\n    return this.sanitizer.sanitize(this.securityContext, marked) || '';\n  }\n\n  render(element: HTMLElement, options: RenderOptions = this.DEFAULT_RENDER_OPTIONS, viewContainerRef?: ViewContainerRef): void {\n    const {\n      clipboard,\n      clipboardOptions,\n      katex,\n      katexOptions,\n    } = options;\n\n    if (clipboard) {\n      this.renderClipboard(element, viewContainerRef, {\n        ...this.DEFAULT_CLIPBOARD_OPTIONS,\n        ...this.clipboardOptions,\n        ...clipboardOptions,\n      });\n    }\n    if (katex) {\n      this.renderKatex(element, {\n        ...this.DEFAULT_KATEX_OPTIONS,\n        ...katexOptions,\n      });\n    }\n    this.highlight(element);\n  }\n\n  reload(): void {\n    this._reload$.next();\n  }\n\n  getSource(src: string): Observable<string> {\n    if (!this.http) {\n      throw new Error(errorSrcWithoutHttpClient);\n    }\n    return this.http\n      .get(src, { responseType: 'text' })\n      .pipe(map(markdown => this.handleExtension(src, markdown)));\n  }\n\n  highlight(element?: Element | Document): void {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof Prism !== 'undefined') {\n      if (!element) {\n        element = document;\n      }\n      const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\n      Array.prototype.forEach.call(noLanguageElements, (x: Element) => x.classList.add('language-none'));\n      Prism.highlightAllUnder(element);\n    }\n  }\n\n  private extendRenderer(renderer: Renderer): Renderer {\n    const extendedRenderer = renderer as ExtendedRenderer;\n    if (extendedRenderer.ɵNgxMarkdownRendererExtended === true) {\n      return renderer;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const defaultCode = renderer.code;\n    renderer.code = function (code: string, language: string | undefined, isEscaped: boolean) {\n      return language === 'mermaid'\n        ? `<div class=\"mermaid\">${code}</div>`\n        : defaultCode.call(this, code, language, isEscaped);\n    };\n\n    extendedRenderer.ɵNgxMarkdownRendererExtended = true;\n\n    return renderer;\n  }\n\n  private decodeHtml(html: string): string {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    const textarea = document.createElement('textarea');\n    textarea.innerHTML = html;\n    return textarea.value;\n  }\n\n  private handleExtension(src: string, markdown: string): string {\n    const extension = src\n      ? src.split('?')[0].split('.').splice(-1).join()\n      : '';\n    return extension !== 'md'\n      ? '```' + extension + '\\n' + markdown + '\\n```'\n      : markdown;\n  }\n\n  private parseMarked(html: string, markedOptions: MarkedOptions, inline = false): string {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    if (inline) {\n      return marked.parseInline(html, markedOptions);\n    }\n    return marked.parse(html, markedOptions);\n  }\n\n  private parseEmoji(html: string): string {\n    if (!isPlatformBrowser(this.platform)) {\n      return html;\n    }\n    if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\n      throw new Error(errorJoyPixelsNotLoaded);\n    }\n    return joypixels.shortnameToUnicode(html);\n  }\n\n  private renderKatex(element: HTMLElement, options: KatexOptions): void {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof katex === 'undefined' || typeof renderMathInElement === 'undefined') {\n      throw new Error(errorKatexNotLoaded);\n    }\n    renderMathInElement(element, options);\n  }\n\n  private renderClipboard(element: HTMLElement, viewContainerRef: ViewContainerRef | undefined, options: ClipboardRenderOptions): void {\n    if (!isPlatformBrowser(this.platform)) {\n      return;\n    }\n    if (typeof ClipboardJS === 'undefined') {\n      throw new Error(errorClipboardNotLoaded);\n    }\n    if (!viewContainerRef) {\n      throw new Error(errorClipboardViewContainerRequired);\n    }\n\n    const {\n      buttonComponent,\n      buttonTemplate,\n    } = options;\n\n    // target every <pre> elements\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      const preElement = preElements.item(i);\n\n      // create <pre> wrapper element\n      const preWrapperElement = document.createElement('div');\n      preWrapperElement.style.position = 'relative';\n      preElement.parentNode!.insertBefore(preWrapperElement, preElement);\n      preWrapperElement.appendChild(preElement);\n\n      // create toolbar element\n      const toolbarWrapperElement = document.createElement('div');\n      toolbarWrapperElement.style.position = 'absolute';\n      toolbarWrapperElement.style.top = '.5em';\n      toolbarWrapperElement.style.right = '.5em';\n      toolbarWrapperElement.style.opacity = '0';\n      toolbarWrapperElement.style.transition = 'opacity 250ms ease-out';\n      preWrapperElement.insertAdjacentElement('beforeend', toolbarWrapperElement);\n\n      // register listener to show/hide toolbar\n      preElement.onmouseover = () => toolbarWrapperElement.style.opacity = '1';\n      preElement.onmouseout = () => toolbarWrapperElement.style.opacity = '0';\n\n      // declare embeddedViewRef holding variable\n      let embeddedViewRef: EmbeddedViewRef<unknown>;\n\n      // use provided component via input property\n      // or provided via ClipboardOptions provider\n      if (buttonComponent) {\n        const buttonFactory =\n          this.componentFactoryResolver.resolveComponentFactory(buttonComponent);\n        const componentRef = viewContainerRef.createComponent(buttonFactory);\n        embeddedViewRef = componentRef.hostView as EmbeddedViewRef<unknown>;\n      }\n      // use provided template via input property\n      else if (buttonTemplate) {\n        embeddedViewRef = viewContainerRef.createEmbeddedView(buttonTemplate);\n      }\n      // use default component\n      else {\n        const buttonFactory =\n          this.componentFactoryResolver.resolveComponentFactory(ClipboardButtonComponent);\n        const componentRef = viewContainerRef.createComponent(buttonFactory);\n        embeddedViewRef = componentRef.hostView as EmbeddedViewRef<unknown>;\n      }\n\n      // declare clipboard instance variable\n      let clipboardInstance: typeof ClipboardJS;\n\n      // attach clipboard.js to root node\n      embeddedViewRef.rootNodes.forEach((node: HTMLElement) => {\n        node.onmouseover = () => toolbarWrapperElement.style.opacity = '1';\n        toolbarWrapperElement.appendChild(node);\n        clipboardInstance = new ClipboardJS(node, { text: () => preElement.innerText });\n      });\n\n      // destroy clipboard instance when view is destroyed\n      embeddedViewRef.onDestroy(() => clipboardInstance.destroy());\n    }\n  }\n\n  private trimIndentation(markdown: string): string {\n    if (!markdown) {\n      return '';\n    }\n    let indentStart: number;\n    return markdown\n      .split('\\n')\n      .map(line => {\n        let lineIdentStart = indentStart;\n        if (line.length > 0) {\n          lineIdentStart = isNaN(lineIdentStart)\n            ? line.search(/\\S|$/)\n            : Math.min(line.search(/\\S|$/), lineIdentStart);\n        }\n        if (isNaN(indentStart)) {\n          indentStart = lineIdentStart;\n        }\n        return lineIdentStart\n          ? line.substring(lineIdentStart)\n          : line;\n      }).join('\\n');\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { KatexOptions } from './katex-options';\nimport { MarkdownService, ParseOptions, RenderOptions } from './markdown.service';\nimport { PrismPlugin } from './prism-plugin';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'markdown, [markdown]',\n  template: '<ng-content></ng-content>',\n})\nexport class MarkdownComponent implements OnChanges, AfterViewInit {\n\n  protected static ngAcceptInputType_clipboard: boolean | '';\n  protected static ngAcceptInputType_emoji: boolean | '';\n  protected static ngAcceptInputType_katex: boolean | '';\n  protected static ngAcceptInputType_lineHighlight: boolean | '';\n  protected static ngAcceptInputType_lineNumbers: boolean | '';\n\n  @Input() data: string | undefined;\n  @Input() src: string | undefined;\n\n  @Input()\n  get inline(): boolean { return this._inline; }\n  set inline(value: boolean) { this._inline = this.coerceBooleanProperty(value); }\n\n  // Plugin - clipboard\n  @Input()\n  get clipboard(): boolean { return this._clipboard; }\n  set clipboard(value: boolean) { this._clipboard = this.coerceBooleanProperty(value); }\n  @Input() clipboardButtonComponent: Type<unknown> | undefined;\n  @Input() clipboardButtonTemplate: TemplateRef<unknown> | undefined;\n\n  // Plugin - emoji\n  @Input()\n  get emoji(): boolean { return this._emoji; }\n  set emoji(value: boolean) { this._emoji = this.coerceBooleanProperty(value); }\n\n  // Plugin - katex\n  @Input()\n  get katex(): boolean { return this._katex; }\n  set katex(value: boolean) { this._katex = this.coerceBooleanProperty(value); }\n  @Input() katexOptions: KatexOptions | undefined;\n\n  // Plugin - lineHighlight\n  @Input()\n  get lineHighlight(): boolean { return this._lineHighlight; }\n  set lineHighlight(value: boolean) { this._lineHighlight = this.coerceBooleanProperty(value); }\n  @Input() line: string | string[] | undefined;\n  @Input() lineOffset: number | undefined;\n\n  // Plugin - lineNumbers\n  @Input()\n  get lineNumbers(): boolean { return this._lineNumbers; }\n  set lineNumbers(value: boolean) { this._lineNumbers = this.coerceBooleanProperty(value); }\n  @Input() start: number | undefined;\n\n  // Event emitters\n  @Output() error = new EventEmitter<string>();\n  @Output() load = new EventEmitter<string>();\n  @Output() ready = new EventEmitter<void>();\n\n  private _commandLine = false;\n  private _clipboard = false;\n  private _emoji = false;\n  private _inline = false;\n  private _katex = false;\n  private _lineHighlight = false;\n  private _lineNumbers = false;\n\n  constructor(\n    public element: ElementRef<HTMLElement>,\n    public markdownService: MarkdownService,\n    public viewContainerRef: ViewContainerRef,\n  ) { }\n\n  ngOnChanges(): void {\n    if (this.data != null) {\n      this.handleData();\n      return;\n    }\n    if (this.src != null) {\n      this.handleSrc();\n      return;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.data && !this.src) {\n      this.handleTransclusion();\n    }\n  }\n\n  render(markdown: string, decodeHtml = false): void {\n    const parsedOptions: ParseOptions = {\n      decodeHtml,\n      inline: this.inline,\n      emoji: this.emoji,\n    };\n\n    const renderOptions: RenderOptions = {\n      clipboard: this.clipboard,\n      clipboardOptions: {\n        buttonComponent: this.clipboardButtonComponent,\n        buttonTemplate: this.clipboardButtonTemplate,\n      },\n      katex: this.katex,\n      katexOptions: this.katexOptions,\n    };\n\n    const parsed = this.markdownService.parse(markdown, parsedOptions);\n\n    this.element.nativeElement.innerHTML = parsed;\n\n    this.handlePlugins();\n\n    this.markdownService.render(this.element.nativeElement, renderOptions, this.viewContainerRef);\n\n    this.ready.emit();\n  }\n\n  private coerceBooleanProperty(value: boolean | ''): boolean {\n    return value != null && `${String(value)}` !== 'false';\n  }\n\n  private handleData(): void {\n    this.render(this.data!);\n  }\n\n  private handleSrc(): void {\n    this.markdownService\n      .getSource(this.src!)\n      .subscribe({\n        next: markdown => {\n          this.render(markdown);\n          this.load.emit(markdown);\n        },\n        error: error => this.error.emit(error),\n      });\n  }\n\n  private handleTransclusion(): void {\n    this.render(this.element.nativeElement.innerHTML, true);\n  }\n\n  private handlePlugins(): void {\n    if (this.lineHighlight) {\n      this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\n    }\n    if (this.lineNumbers) {\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\n      this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\n    }\n  }\n\n  private setPluginClass(element: HTMLElement, plugin: string | string[]): void {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      const classes = plugin instanceof Array ? plugin : [plugin];\n      preElements.item(i).classList.add(...classes);\n    }\n  }\n\n  private setPluginOptions(element: HTMLElement, options: { [key: string]: number | string | string[] | undefined }): void {\n    const preElements = element.querySelectorAll('pre');\n    for (let i = 0; i < preElements.length; i++) {\n      Object.keys(options).forEach(option => {\n        const attributeValue = options[option];\n        if (attributeValue) {\n          const attributeName = this.toLispCase(option);\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\n        }\n      });\n    }\n  }\n\n  private toLispCase(value: string): string {\n    const upperChars = value.match(/([A-Z])/g);\n    if (!upperChars) {\n      return value;\n    }\n    let str = value.toString();\n    for (let i = 0, n = upperChars.length; i < n; i++) {\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\n    }\n    if (str.slice(0, 1) === '-') {\n      str = str.slice(1);\n    }\n    return str;\n  }\n}\n","import { ElementRef, NgZone, Pipe, PipeTransform, ViewContainerRef } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { MarkdownService, ParseOptions, RenderOptions } from './markdown.service';\n\nexport type MarkdownPipeOptions = ParseOptions & RenderOptions;\n\n@Pipe({\n  name: 'markdown',\n})\nexport class MarkdownPipe implements PipeTransform {\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private markdownService: MarkdownService,\n    private viewContainerRef: ViewContainerRef,\n    private zone: NgZone,\n  ) { }\n\n  transform(value: string, options?: MarkdownPipeOptions): string {\n    if (value == null) {\n      return '';\n    }\n\n    if (typeof value !== 'string') {\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${typeof value}]`);\n      return value;\n    }\n\n    const markdown = this.markdownService.parse(value, options);\n\n    this.zone.onStable\n      .pipe(first())\n      .subscribe(() => this.markdownService.render(this.elementRef.nativeElement, options, this.viewContainerRef));\n\n    return markdown;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule, Provider, SecurityContext } from '@angular/core';\n\nimport { ClipboardButtonComponent } from './clipboard-button.component';\nimport { LanguagePipe } from './language.pipe';\nimport { MarkdownComponent } from './markdown.component';\nimport { MarkdownPipe } from './markdown.pipe';\nimport { MarkdownService, SECURITY_CONTEXT } from './markdown.service';\n\n// having a dependency on `HttpClientModule` within a library\n// breaks all the interceptors from the app consuming the library\n// here, we explicitely ask the user to pass a provider with\n// their own instance of `HttpClientModule`\nexport interface MarkdownModuleConfig {\n  loader?: Provider;\n  clipboardOptions?: Provider;\n  markedOptions?: Provider;\n  sanitize?: SecurityContext;\n}\n\nconst sharedDeclarations = [\n  ClipboardButtonComponent,\n  LanguagePipe,\n  MarkdownComponent,\n  MarkdownPipe,\n];\n\nconst sharedEntryComponents = [\n  ClipboardButtonComponent,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  exports: sharedDeclarations,\n  declarations: sharedDeclarations,\n  entryComponents: sharedEntryComponents,\n})\nexport class MarkdownModule {\n  static forRoot(markdownModuleConfig?: MarkdownModuleConfig): ModuleWithProviders<MarkdownModule> {\n    return {\n      ngModule: MarkdownModule,\n      providers: [\n        MarkdownService,\n        markdownModuleConfig && markdownModuleConfig.loader || [],\n        markdownModuleConfig && markdownModuleConfig.clipboardOptions || [],\n        markdownModuleConfig && markdownModuleConfig.markedOptions || [],\n        {\n          provide: SECURITY_CONTEXT,\n          useValue: markdownModuleConfig && markdownModuleConfig.sanitize != null\n            ? markdownModuleConfig.sanitize\n            : SecurityContext.HTML,\n        },\n      ],\n    };\n  }\n\n  static forChild(): ModuleWithProviders<MarkdownModule> {\n    return {\n      ngModule: MarkdownModule,\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["MarkedRenderer","i1","i2.ClipboardOptions","i3.MarkedOptions","i1.MarkdownService"],"mappings":"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"}